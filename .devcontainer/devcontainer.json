// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.183.0/containers/docker-existing-dockerfile
{
  "name": "Development Environment",

  // Sets the run context to one level up instead of the .devcontainer folder.
  "context": "..",

  // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
  "dockerFile": "../Dockerfile",

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "editor.formatOnSave": true,
    "git.ignoreLimitWarning": true,
    "python.pythonPath": "/usr/local/bin/python",
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": false,
    "python.formatting.provider": "black",
    "python.testing.pytestArgs": ["tests"],
    "python.testing.unittestEnabled": false,
    "python.testing.nosetestsEnabled": false,
    "python.testing.pytestEnabled": true
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "wmaurer.change-case",
    "formulahendry.code-runner",
    "streetsidesoftware.code-spell-checker",
    "ryanluker.vscode-coverage-gutters",
    "ms-azuretools.vscode-docker",
    "saikou9901.evilinspector",
    "donjayamanne.githistory",
    "github.vscode-pull-request-github",
    "oderwat.indent-rainbow",
    "ms-toolsai.jupyter",
    "yzhang.markdown-all-in-one",
    "yzane.markdown-pdf",
    "shd101wyy.markdown-preview-enhanced",
    "davidanson.vscode-markdownlint",
    "ryu1kn.partial-diff",
    "ionutvmi.path-autocomplete",
    "esbenp.prettier-vscode",
    "ms-python.python",
    "mechatroner.rainbow-csv",
    "mde.select-highlight-minimap",
    "ms-vscode.test-adapter-converter",
    "hbenl.vscode-test-explorer",
    "gruntfuggly.todo-tree"
  ]

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [8888],

  // Uncomment the next line to run commands after the container is created - for example installing curl.
  // "postCreateCommand": "",

  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

  // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "vscode"
}
